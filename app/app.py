import streamlit as st
# Alterado de 'build_sidebar' para 'get_user_input'
from ui import get_user_input
from prediction import load_model, predict, display_prediction

def main():
    """
    Fun√ß√£o principal que executa a aplica√ß√£o Streamlit.
    """
    
    # --- Configura√ß√£o da P√°gina ---
    st.set_page_config(
        page_title="Previs√£o de Churn",
        page_icon="üè¶",
        layout="centered",
        initial_sidebar_state="expanded"
    )

    # --- T√≠tulo e Introdu√ß√£o ---
    st.title('Sistema de Previs√£o de Churn de Clientes')
    st.markdown("""
        Esta aplica√ß√£o utiliza um modelo de Machine Learning (XGBoost) para prever a probabilidade 
        de um cliente deixar o banco (churn). 
        
        Preencha os dados do cliente nos campos abaixo para gerar uma previs√£o e uma recomenda√ß√£o de a√ß√£o.
    """)
    st.divider()

    # --- Carregamento do Modelo ---
    pipeline = load_model()

    # --- Interface e L√≥gica de Predi√ß√£o ---
    if pipeline:
        # Constr√≥i a UI com colunas e obt√©m os dados inseridos
        user_input = get_user_input()
        
        st.divider()

        # Bot√£o para acionar a predi√ß√£o
        if st.button('Analisar Cliente', type="primary", use_container_width=True):
            with st.spinner('Realizando a previs√£o...'):
                # Realiza a predi√ß√£o
                probabilidade = predict(pipeline, user_input)
                
                # Exibe o resultado
                display_prediction(probabilidade)
    else:
        st.warning("O modelo n√£o p√¥de ser carregado. A aplica√ß√£o n√£o pode continuar.")

if __name__ == '__main__':
    main()